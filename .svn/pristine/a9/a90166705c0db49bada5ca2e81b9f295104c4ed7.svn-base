package be.industria.industria24u.industria24u;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ExpandableListView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

import be.industria.industria24u.industria24u.editors.AdminTeamCreateActivity;
import be.industria.industria24u.industria24u.navigation.RunnerNavigationListener;
import entity.Person;
import entity.Team;

public class RunnerTeamsHasNoTeamActivity extends AppCompatActivity {
    private SingletonApplication app;
    private DrawerLayout drawer;
    private ExpandableListView listViewNoTeam;
    private List<Object> parentsNoTeam;
    private HashMap<Object, List<String>> relationsNoTeam;
    private List<Person> persons = new LinkedList<>();
    private List<Team> teams = new LinkedList<>();
    private int year = Calendar.getInstance().get(Calendar.YEAR);


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        app = (SingletonApplication) this.getApplication();
        setContentView(R.layout.runner_my_team_noteam_container);
        setupViewHasNoTeam();
        app.getEntityMapper().gettMapper().getTeamsByYear(year); // Get all teams and afterwards get teamleaders connected to those teams to set up content of listview
        new GetTeamsNoTeam().execute();
    }

    public void setupViewHasNoTeam() {
        Toolbar toolbar = (Toolbar) findViewById(R.id.runner_my_team_noTeam_toolbar);
        if (getSupportActionBar() == null) {
            setSupportActionBar(toolbar);
        }

        drawer = (DrawerLayout) findViewById(R.id.runner_my_team_noTeam_container);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.runner_my_team_noTeam_nav);
        navigationView.setNavigationItemSelectedListener(new NavListener(this.getApplicationContext()));

        listViewNoTeam = (ExpandableListView) findViewById(R.id.runner_team_list);
        parentsNoTeam = new ArrayList<>();
        relationsNoTeam = new HashMap<>();

    }

    public void setupContentHasNoTeam() {
        if (!persons.isEmpty()) {
            for (Person p:persons) {
                List<String> fields = p.getExportableFieldsForQueue();
                parentsNoTeam.add(teams.get(persons.indexOf(p)));
                relationsNoTeam.put(teams.get(persons.indexOf(p)), fields);
            }
            ExpandableAdapter adapterNoTeam = new ExpandableAdapter(relationsNoTeam, parentsNoTeam);
            adapterNoTeam.setInflater((LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE), this);
            listViewNoTeam.setAdapter(adapterNoTeam);
        } else {
            Toast.makeText(app.getApplicationContext(), "There are no teams in the database", Toast.LENGTH_LONG).show();
        }
    }
    private class NavListener extends RunnerNavigationListener {
        public NavListener(Context context) {
            super(context);
        }

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            super.onNavigationItemSelected(item);
            //finish();
            startActivity(super.resultIntent);
            drawer.closeDrawer(GravityCompat.START);
            return true;
        }
    }

    public void newTeam(View v) {
        Intent intentCreate = new Intent(this, AdminTeamCreateActivity.class);
        startActivity(intentCreate);
        finish();
    }

    private class GetTeamsNoTeam extends AsyncTask<Void, Void, List<Team>> {
        protected List<Team> doInBackground(Void... voids) {
            while (!app.getEntityMapper().dataReady()) {
                if (isCancelled()) break;
            }
            if (app.getEntityMapper().dataReady()) {
                teams = app.entityMapper.teams;
                app.getEntityMapper().dataGrabbed();
            }
            return teams;
        }
        protected void onPostExecute(List<Team> teams) {
            if (teams.isEmpty()) {
                Toast.makeText(app.getApplicationContext(), "There are no teams in the database for this year. Be a pioneer?", Toast.LENGTH_LONG).show();
            }
            else {
                for (Team t : teams) {
                    app.getEntityMapper().getpMapper().getPerson(t.getLeaderId());
                    new GetPersonNoTeam().execute();
                }
            }

        }
    }

    private class GetPersonNoTeam extends AsyncTask<Void, Void, Person> {
        protected Person doInBackground(Void... voids) {
            Person person = new Person();
            while (!app.getEntityMapper().dataReady()) {
                if (isCancelled()) break;
            }
            if (app.getEntityMapper().dataReady()) {
                person = app.getEntityMapper().person;
                app.getEntityMapper().dataGrabbed();
            }
            return person;
        }

        protected void onPostExecute(Person person) {
            persons.add(person);
            if (persons.size() == teams.size()) {
                setupContentHasNoTeam();
            }
        }
    }
}
